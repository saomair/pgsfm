{"version":3,"sources":["turbopack:///[project]/node_modules/next/dist/esm/build/templates/app-route.js","turbopack:///[project]/src/app/api/dalle/route.ts","turbopack:///[project]/src/lib/dalle.ts","turbopack:///[project]/src/lib/dallePrompts.ts"],"sourcesContent":["import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/dalle/route\",\n        pathname: \"/api/dalle\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/src/app/api/dalle/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/dalle/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n","import { NextRequest, NextResponse } from 'next/server';\n\nimport {\n  MissingOpenAiKeyError,\n  OpenAiImageError,\n  generateDalleImage,\n  type GenerateDalleImageOptions\n} from '@/lib/dalle';\nimport { allDallePrompts, dallePrompts, type DalleCategory } from '@/lib/dallePrompts';\n\nexport const runtime = 'nodejs';\n\ninterface GenerateBody {\n  prompt?: string;\n  size?: GenerateDalleImageOptions['size'];\n  quality?: GenerateDalleImageOptions['quality'];\n  category?: DalleCategory;\n  fileName?: string;\n  user?: string;\n}\n\nexport async function GET(request: NextRequest) {\n  const { searchParams } = new URL(request.url);\n  const category = searchParams.get('category') as DalleCategory | null;\n  const fileName = searchParams.get('fileName');\n\n  if (category && fileName) {\n    const preset = dallePrompts[category]?.[fileName];\n    if (!preset) {\n      return NextResponse.json({ error: 'Preset not found.' }, { status: 404 });\n    }\n\n    return NextResponse.json({ prompt: preset, category, fileName });\n  }\n\n  return NextResponse.json({\n    prompts: allDallePrompts\n  });\n}\n\nexport async function POST(request: NextRequest) {\n  const body = (await request.json()) as GenerateBody;\n  const { prompt, size, quality, category, fileName, user } = body;\n\n  let resolvedPrompt = prompt?.trim();\n  let resolvedSize = size;\n\n  if (category && fileName) {\n    const preset = dallePrompts[category]?.[fileName];\n    if (!preset) {\n      return NextResponse.json(\n        {\n          error: `Unknown preset for category \"${category}\" and file \"${fileName}\".`\n        },\n        { status: 400 }\n      );\n    }\n\n    resolvedPrompt = resolvedPrompt || preset.prompt;\n    resolvedSize = resolvedSize || preset.size;\n  }\n\n  if (!resolvedPrompt) {\n    return NextResponse.json(\n      {\n        error: 'You must provide a prompt or a known preset (category + fileName).'\n      },\n      { status: 400 }\n    );\n  }\n\n  try {\n    const { imageBase64, revisedPrompt, size: finalSize } = await generateDalleImage({\n      prompt: resolvedPrompt,\n      size: resolvedSize,\n      quality,\n      user\n    });\n\n    return NextResponse.json({\n      imageBase64,\n      revisedPrompt,\n      size: finalSize,\n      meta: {\n        category,\n        fileName,\n        prompt: resolvedPrompt\n      }\n    });\n  } catch (error) {\n    if (error instanceof MissingOpenAiKeyError) {\n      return NextResponse.json({ error: error.message }, { status: 500 });\n    }\n\n    if (error instanceof OpenAiImageError) {\n      return NextResponse.json({ error: error.message }, { status: 502 });\n    }\n\n    return NextResponse.json({ error: 'Unexpected error generating image.' }, { status: 500 });\n  }\n}\n","import { type FlatDallePrompt } from './dallePrompts';\n\nexport type DalleModel = 'gpt-image-1';\n\nexport interface GenerateDalleImageOptions {\n  prompt: string;\n  size?: '1024x1024' | '1792x1024' | '1024x1792';\n  quality?: 'standard' | 'hd';\n  user?: string;\n  model?: DalleModel;\n}\n\nexport interface GenerateDalleImageResult {\n  /** Base64 encoded PNG image returned by OpenAI. */\n  imageBase64: string;\n  /** Prompt rewritten by the model, if provided. */\n  revisedPrompt?: string;\n  /** Size value echoed back from the API. */\n  size: string;\n}\n\nconst OPENAI_IMAGE_ENDPOINT = 'https://api.openai.com/v1/images/generations';\n\nexport class MissingOpenAiKeyError extends Error {\n  constructor() {\n    super('OPENAI_API_KEY environment variable is not set.');\n    this.name = 'MissingOpenAiKeyError';\n  }\n}\n\nexport class OpenAiImageError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'OpenAiImageError';\n  }\n}\n\n/**\n * Calls the OpenAI Images API (DALL·E/gpt-image-1) and returns the base64 image payload.\n * Consumers are responsible for decoding and persisting the image.\n */\nexport async function generateDalleImage({\n  prompt,\n  size = '1024x1024',\n  quality = 'standard',\n  user,\n  model = 'gpt-image-1'\n}: GenerateDalleImageOptions): Promise<GenerateDalleImageResult> {\n  const apiKey = process.env.OPENAI_API_KEY;\n\n  if (!apiKey) {\n    throw new MissingOpenAiKeyError();\n  }\n\n  const response = await fetch(OPENAI_IMAGE_ENDPOINT, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${apiKey}`\n    },\n    body: JSON.stringify({\n      model,\n      prompt,\n      size,\n      quality,\n      user,\n      response_format: 'b64_json'\n    })\n  });\n\n  if (!response.ok) {\n    const errorBody = await response.text();\n    throw new OpenAiImageError(\n      `OpenAI image generation failed with status ${response.status}: ${errorBody}`\n    );\n  }\n\n  const json = (await response.json()) as {\n    data: Array<{ b64_json: string; revised_prompt?: string }>;\n  };\n\n  if (!json.data?.length) {\n    throw new OpenAiImageError('OpenAI image generation succeeded but returned no image data.');\n  }\n\n  const [{ b64_json: b64Json, revised_prompt: revisedPrompt }] = json.data;\n\n  return {\n    imageBase64: b64Json,\n    revisedPrompt,\n    size\n  };\n}\n\nexport function resolvePresetFromFileName(\n  prompt: FlatDallePrompt\n): {\n  categoryFolder: string;\n  relativePath: string;\n} {\n  const categoryFolder = prompt.category;\n  const relativePath = `images/ai-generated/${categoryFolder}/${prompt.fileName}`;\n\n  return {\n    categoryFolder,\n    relativePath\n  };\n}\n","export type DalleCategory = 'hero' | 'card' | 'team' | 'banner' | 'blog';\n\nexport interface DallePromptConfig {\n  /**\n   * Final filename (relative to public/images/ai-generated/<category>) that should be written to disk.\n   */\n  fileName: string;\n  /**\n   * Prompt text that should be sent to OpenAI's image generation endpoint.\n   */\n  prompt: string;\n  /**\n   * Supported OpenAI image size that most closely matches the desired aspect ratio; crop afterwards if needed.\n   */\n  size: '1024x1024' | '1792x1024' | '1024x1792';\n  /**\n   * Optional human friendly label for UI / logging.\n   */\n  label?: string;\n}\n\nexport type DallePromptMap = Record<DalleCategory, Record<string, DallePromptConfig>>;\n\nexport const dallePrompts: DallePromptMap = {\n  hero: {\n    'hero-security-team.jpg': {\n      fileName: 'hero-security-team.jpg',\n      label: 'Professional Security Team',\n      size: '1792x1024',\n      prompt:\n        'Professional UK security team in London, wearing high-visibility jackets, company logo shirts, cargo trousers, and sturdy boots, standing in front of modern London office building, wide cinematic composition, professional lighting, confident poses, authentic UK security officer attire'\n    },\n    'hero-security-services.jpg': {\n      fileName: 'hero-security-services.jpg',\n      label: 'Security Services Patrol',\n      size: '1792x1024',\n      prompt:\n        'UK security officer patrolling modern London commercial building at night, wearing high-vis jacket, company polo shirt, cargo trousers, sturdy boots, carrying torch, surveillance cameras visible, dramatic lighting, authentic UK security atmosphere, professional London setting'\n    },\n    'hero-default.jpg': {\n      fileName: 'hero-default.jpg',\n      label: 'Security & Facilities Overview',\n      size: '1792x1024',\n      prompt:\n        'Professional UK security and facilities management team in modern London office lobby, security officers in high-vis jackets and company uniforms, facilities staff in professional attire, wide cinematic composition, authentic UK business environment, clean contemporary architecture'\n    }\n  },\n  card: {\n    'card-security-services.jpg': {\n      fileName: 'card-security-services.jpg',\n      label: 'Security Monitoring',\n      size: '1024x1024',\n      prompt:\n        'UK security officer monitoring surveillance cameras in modern London control room, wearing high-vis jacket, company shirt, cargo trousers, multiple screens showing camera feeds, authentic UK security control room, professional atmosphere'\n    },\n    'card-facilities-management.jpg': {\n      fileName: 'card-facilities-management.jpg',\n      label: 'Facilities Management',\n      size: '1024x1024',\n      prompt:\n        'UK facilities management team cleaning modern London office space, professional cleaning uniforms, modern cleaning equipment, sanitisation supplies, authentic UK facilities management, professional maintenance setting'\n    },\n    'card-cleaning-services.jpg': {\n      fileName: 'card-cleaning-services.jpg',\n      label: 'Cleaning Services',\n      size: '1024x1024',\n      prompt:\n        'Professional UK cleaning staff in London healthcare facility, wearing clean uniforms, sanitisation equipment, medical-grade cleaning supplies, authentic UK healthcare cleaning standards, professional environment'\n    },\n    'card-default.jpg': {\n      fileName: 'card-default.jpg',\n      label: 'Services Overview',\n      size: '1024x1024',\n      prompt:\n        'Professional UK security and facilities management services overview, modern London office building with security presence, UK security officers in high-vis uniforms, authentic UK corporate style'\n    }\n  },\n  team: {\n    'team-john-smith.jpg': {\n      fileName: 'team-john-smith.jpg',\n      label: 'John Smith Portrait',\n      size: '1024x1792',\n      prompt:\n        'Professional UK business headshot of middle-aged man, security industry executive, wearing dark suit with company badge, confident expression, clean neutral background, authentic UK professional lighting, high quality portrait photography'\n    },\n    'team-sarah-johnson.jpg': {\n      fileName: 'team-sarah-johnson.jpg',\n      label: 'Sarah Johnson Portrait',\n      size: '1024x1792',\n      prompt:\n        'Professional UK business headshot of woman, facilities management director, wearing smart business suit with company lanyard, professional makeup, clean background, authentic UK professional style, high quality portrait photography'\n    },\n    'team-michael-brown.jpg': {\n      fileName: 'team-michael-brown.jpg',\n      label: 'Michael Brown Portrait',\n      size: '1024x1792',\n      prompt:\n        'Professional UK business headshot of man, operations manager, wearing high-vis security jacket over smart shirt, company badge visible, confident professional expression, clean background, authentic UK security professional style'\n    },\n    'team-emma-wilson.jpg': {\n      fileName: 'team-emma-wilson.jpg',\n      label: 'Emma Wilson Portrait',\n      size: '1024x1792',\n      prompt:\n        'Professional UK business headshot of woman, quality assurance manager, wearing smart corporate attire with company ID badge, professional appearance, clean background, authentic UK business style'\n    },\n    'team-default.jpg': {\n      fileName: 'team-default.jpg',\n      label: 'Team Default Portrait',\n      size: '1024x1792',\n      prompt:\n        'Professional UK business headshot, security industry professional, wearing smart corporate attire with company lanyard, neutral expression, clean background, authentic UK professional style'\n    }\n  },\n  banner: {\n    'banner-healthcare.jpg': {\n      fileName: 'banner-healthcare.jpg',\n      label: 'Healthcare Sector Banner',\n      size: '1792x1024',\n      prompt:\n        'Modern UK healthcare facility with security presence, London hospital building, professional medical environment, UK security officers in high-vis jackets and company uniforms, wide cinematic composition, authentic UK healthcare security atmosphere'\n    },\n    'banner-retail.jpg': {\n      fileName: 'banner-retail.jpg',\n      label: 'Retail Sector Banner',\n      size: '1792x1024',\n      prompt:\n        'UK retail store with security presence, London shopping centre environment, security officer patrolling in high-vis jacket and company uniform, modern retail setting, wide cinematic composition, authentic UK retail security'\n    },\n    'banner-corporate.jpg': {\n      fileName: 'banner-corporate.jpg',\n      label: 'Corporate Sector Banner',\n      size: '1792x1024',\n      prompt:\n        'Corporate office building in London business district, Canary Wharf or City of London skyline, security and facilities management presence, modern skyscraper architecture, UK security officers in professional uniforms, wide cinematic composition, authentic UK corporate style'\n    },\n    'banner-contact.jpg': {\n      fileName: 'banner-contact.jpg',\n      label: 'Contact Banner',\n      size: '1792x1024',\n      prompt:\n        'Professional UK contact centre or office reception in London, modern business environment, customer service atmosphere, security officer in high-vis uniform at reception, wide cinematic composition, welcoming UK business environment'\n    },\n    'banner-default.jpg': {\n      fileName: 'banner-default.jpg',\n      label: 'Default Sector Banner',\n      size: '1792x1024',\n      prompt:\n        'Professional UK security and facilities management overview, modern London office complex, business district skyline, UK security officers in high-vis uniforms, wide cinematic composition, authentic UK professional business style'\n    }\n  },\n  blog: {\n    'blog-default.jpg': {\n      fileName: 'blog-default.jpg',\n      label: 'Blog Default Cover',\n      size: '1792x1024',\n      prompt:\n        'Professional UK security and facilities management blog cover, modern London office environment, business professional setting with security officer in high-vis uniform, cinematic composition, authentic UK professional corporate style, clean editorial layout'\n    }\n  }\n};\n\nexport interface FlatDallePrompt extends DallePromptConfig {\n  /** Category in the ai-generated folder that this prompt belongs to. */\n  category: DalleCategory;\n}\n\nexport const allDallePrompts: FlatDallePrompt[] = Object.entries(dallePrompts).flatMap(\n  ([category, entries]) =>\n    Object.values(entries).map((entry) => ({\n      ...entry,\n      category: category as DalleCategory\n    }))\n);\n"],"names":[],"mappings":"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","ignoreList":[0]}